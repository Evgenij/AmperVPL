//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit2.h"
#include "Project1PCH1.h"
#include "Unit1.h"
#include "Unit3.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "zLed"
#pragma link "zPanel2"
#pragma resource "*.dfm"
TMain *Main;
int x,y,x_f,y_f;

bool but=false;
bool ed=false;
bool l=false;

class Battery
{
public:
	TPanel *p;
	TImage *im;
	TTrackBar *tb;
	TLabel *a;
	int bx,by;
	void __fastcall tbChange(TObject *Sender);
	void create(int x,int y)
	{
		p=new TPanel(Main);
		p->Parent=Main;
		p->Caption="";
		p->Width=150;
		p->Height=110;
		p->Left=x-p->Width/2;
		p->Top=y-p->Height/2;

		bx=x;
        by=y;

		im=new TImage(Main);
		im->Parent=gb;
		im->Center=true;
		im->Proportional=true;
		im->Height=55;
		im->Width=150;
		im->Picture->LoadFromFile("batt.png");

		tb=new TTrackBar(Main);
		tb->Parent=gb;
		tb->Top=50;
		tb->Width=150;
		tb->Position=10;
        tb->Frequency=10;
		tb->Max=100;
		SetWindowRgn(tb->Handle,CreateRectRgn(1,1,tb->Width-1,tb->Height-1),true);
		tb->OnChange=tbChange;

		a=new TLabel(Main);
		a->Parent=gb;
		a->Align=alBottom;
		a->Width=150;
		a->Alignment=taCenter;
		a->Caption=IntToStr(tb->Position)+"A";
	}
	void paint()
	{
		Main->Canvas->MoveTo(bx,by);
		Main->Canvas->LineTo(bx+120,by);
	}
};

void __fastcall Battery::tbChange(TObject *Sender)
{
	Main->Label1->Caption=IntToStr(tb->Position);
};
//---------------------------------------------------------------------------
__fastcall TMain::TMain(TComponent* Owner)
	: TForm(Owner)
{
	Main->Canvas->Pen->Color=clWhite;
    Main->Canvas->Pen->Width=4;
}
//---------------------------------------------------------------------------
/*void __fastcall TMain::FormMouseDown(TObject *Sender, TMouseButton Button, TShiftState Shift,
          int X, int Y)
{
	ShowMessage(IntToStr(x)+":"+IntToStr(y));
} */
//---------------------------------------------------------------------------
void __fastcall TMain::Button1MouseDown(TObject *Sender, TMouseButton Button, TShiftState Shift,
          int X, int Y)
{
	if(Button == mbLeft)
	{
		Tag = 1;
		x = X;
		y = Y;
	}
}
//---------------------------------------------------------------------------
void __fastcall TMain::Button1MouseUp(TObject *Sender, TMouseButton Button, TShiftState Shift,
          int X, int Y)
{
	Tag = 0;
	x_f=Button1->Left;
	y_f=Button1->Top;
	//ShowMessage(IntToStr(x_f)+":"+IntToStr(y_f));
}
//---------------------------------------------------------------------------
void __fastcall TMain::Button1MouseMove(TObject *Sender, TShiftState Shift, int X,
          int Y)
{
	if (Tag)
	{
		Button1->Left += X - x;
		Button1->Top += Y - y;
	}
}
//---------------------------------------------------------------------------
void __fastcall TMain::FormMouseDown(TObject *Sender, TMouseButton Button, TShiftState Shift,
          int X, int Y)
{
	Battery b;
	b.create(X,Y);
	b.paint();


	/*if(but==true)
	{
		TButton *b=new TButton(this);
		b->Parent=Main;
		b->Left=X-b->Width/2;
		b->Top=Y-b->Height/2;
        b->Tag=1;
	}
	else if(ed==true)
	{
		TEdit *e=new TEdit(this);
		e->Parent=Main;
		e->Left=X;
		e->Top=Y;
	}
	else if(l==true)
	{
		TListBox *l=new TListBox(this);
		l->Parent=Main;
		l->Left=X;
		l->Top=Y;
	}
	else
	{
        ShowMessage("error");
	}     */
}
//---------------------------------------------------------------------------

void __fastcall TMain::Edit1Click(TObject *Sender)
{
	ed=true;
	if(but==true)
	{
		but=false;
	}
}
//---------------------------------------------------------------------------


void __fastcall TMain::N3Click(TObject *Sender)
{
    FormMenu->Close();
}
//---------------------------------------------------------------------------

